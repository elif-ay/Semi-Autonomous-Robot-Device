 raspivid -o - -t 99999 -w 640 -h 360 -fps 25|cvlc stream:///dev/stdin --sout '#standard{access=http,mux=ts,dst=:8090}' :demux=h264

Kaynak ve hedef bilgisayarların IP adreslerini ve host numaralarını bulmak için aşağıdaki adımları takip edebilirsiniz:

Raspberry Pi'de IP adresini bulma:

Raspberry Pi'yi açın ve komut istemcisini başlatın.
ifconfig komutunu çalıştırın.
Komut istemcisindeki çıktıda, Raspberry Pi'nin bağlı olduğu ağ arayüzünün IP adresini bulun. Genellikle "eth0" veya "wlan0" gibi bir arayüz adı kullanılır.
Ubuntu'da IP adresini bulma:

Ubuntu'da Terminal'i açın.
ifconfig veya ip addr show komutunu çalıştırın.
Komut istemcisindeki çıktıda, Ubuntu'nun bağlı olduğu ağ arayüzünün IP adresini bulun. Benzer şekilde, genellikle "eth0" veya "wlan0" gibi bir arayüz adı kullanılır.
Host numarasını belirleme:

Host numarası, belirli bir TCP/IP bağlantısı üzerinde işlem yapacak olan hedef cihazın port numarasını temsil eder. Bu port numarası, kaynak ve hedef bilgisayarlar arasındaki anlaşmaya dayanır. Örneğin, 5000 portu gibi bir numara belirleyebilirsiniz. Bu numarayı kaynak ve hedef bilgisayarlar arasında paylaşmanız gerekecektir.
Kaynak bilgisayar (Raspberry Pi) IP adresini ve hedef bilgisayar (Ubuntu) IP adresini ve host numarasını elde ettikten sonra, kod örneklerinde host değişkenine Raspberry Pi'nin IP adresini ve port değişkenine de belirlediğiniz host numarasını atayabilirsiniz.



// Raspberry kamerasından görüntünün Linux tarafına aktarılması için Raspberry terminalde aşağıdaki komut çalıştırılır:
1. sudo apt-get update
2. sudo apt-get install python3-opencv
3. raspivid -o - -t 0 -n -w 640 -h 480 -fps 30 -b 1000000 -fl | cvlc -vvv stream:///dev/stdin --sout '#standard{access=http,mux=ts,dst=:8090}' :demux=h264

// Linux tarafında ise 
1.sudo apt-get install python3-opencv
2. GetCameraVideo.py kodu çalıştırılır. (IP adresinin doğruluğu kontrol edilmelidir.)


import io
import socket
import struct
import time
import picamera

# Raspberry Pi IP address
RASPBERRY_PI_IP = 'YOUR_RASPBERRY_PI_IP_ADDRESS'
PORT = 8000

client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
client_socket.connect((RASPBERRY_PI_IP, PORT))
connection = client_socket.makefile('wb')

try:
    with picamera.PiCamera() as camera:
        camera.resolution = (640, 480)
        camera.framerate = 30
        time.sleep(2)  # Allow camera to warm up
        start = time.time()
        stream = io.BytesIO()

        # Send video stream in a loop
        for _ in camera.capture_continuous(stream, 'jpeg', use_video_port=True):
            stream.seek(0)
            data = stream.read()

            # Send frame length and frame data
            client_socket.sendall(struct.pack('<L', len(data)) + data)
            stream.seek(0)
            stream.truncate()

        # Send termination signal
        client_socket.sendall(struct.pack('<L', 0))
finally:
    connection.close()
    client_socket.close()







import cv2
import numpy as np
import socket
import struct

# Laptop IP address
LAPTOP_IP = 'YOUR_LAPTOP_IP_ADDRESS'
PORT = 8000

server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server_socket.bind((LAPTOP_IP, PORT))
server_socket.listen(0)

connection, address = server_socket.accept()
connection = connection.makefile('rb')

try:
    while True:
        # Read frame length
        image_len = struct.unpack('<L', connection.read(struct.calcsize('<L')))[0]

        # Break the loop if termination signal is received
        if not image_len:
            break

        # Read frame data and convert to NumPy array
        image_data = connection.read(image_len)
        image = np.frombuffer(image_data, dtype=np.uint8)

        # Decode and display the frame
        frame = cv2.imdecode(image, cv2.IMREAD_COLOR)
        cv2.imshow('Video Stream', frame)
        cv2.waitKey(1)
finally:
    connection.close()
    server_socket.close()
    cv2.destroyAllWindows()












